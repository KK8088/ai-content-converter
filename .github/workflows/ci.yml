name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  security-events: write
  actions: read
  pages: write
  id-token: write

jobs:
  # 基础检查
  basic-check:
    name: 基础检查
    runs-on: ubuntu-latest

    steps:
    - name: 检出代码
      uses: actions/checkout@v4

    - name: 检查文件结构
      run: |
        echo "检查项目文件结构..."
        ls -la
        echo "检查HTML文件..."
        if [ -f "index.html" ]; then
          echo "✅ index.html 存在"
        else
          echo "❌ index.html 不存在"
          exit 1
        fi
        echo "检查CSS文件..."
        if [ -d "css" ]; then
          echo "✅ css 目录存在"
          ls -la css/
        else
          echo "❌ css 目录不存在"
          exit 1
        fi
        echo "检查JS文件..."
        if [ -d "js" ]; then
          echo "✅ js 目录存在"
          ls -la js/
        else
          echo "❌ js 目录不存在"
          exit 1
        fi

    - name: HTML语法检查
      run: |
        echo "检查HTML语法..."
        # 简单的HTML语法检查
        if grep -q "<!DOCTYPE html>" index.html; then
          echo "✅ HTML5 DOCTYPE 正确"
        else
          echo "❌ 缺少HTML5 DOCTYPE"
          exit 1
        fi

  # 功能测试
  functional-test:
    name: 功能测试
    runs-on: ubuntu-latest
    needs: [basic-check]

    steps:
    - name: 检出代码
      uses: actions/checkout@v4

    - name: 设置Python环境
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'

    - name: 启动测试服务器
      run: |
        echo "启动本地服务器..."
        python -m http.server 8080 &
        sleep 5

    - name: 测试服务器响应
      run: |
        echo "测试服务器响应..."
        curl -f http://localhost:8080/ || exit 1
        echo "✅ 服务器响应正常"

    - name: 检查关键文件可访问性
      run: |
        echo "检查CSS文件..."
        curl -f http://localhost:8080/css/styles.css || exit 1
        echo "检查JS文件..."
        curl -f http://localhost:8080/js/config.js || exit 1
        echo "✅ 关键文件可访问"

  # 安全扫描
  security:
    name: 安全扫描
    runs-on: ubuntu-latest
    needs: [basic-check]

    steps:
    - name: 检出代码
      uses: actions/checkout@v4

    - name: 检查敏感信息
      run: |
        echo "检查是否包含敏感信息..."
        # 检查是否有API密钥等敏感信息
        if grep -r "api_key\|secret\|password" --exclude-dir=.git .; then
          echo "⚠️ 发现可能的敏感信息"
        else
          echo "✅ 未发现敏感信息"
        fi

    - name: 运行 CodeQL 分析
      uses: github/codeql-action/init@v2
      with:
        languages: javascript

    - name: 执行 CodeQL 分析
      uses: github/codeql-action/analyze@v2

  # 质量检查完成通知
  quality-check-complete:
    name: 质量检查完成
    runs-on: ubuntu-latest
    needs: [basic-check, functional-test, security]
    if: always()

    steps:
    - name: 质量检查结果
      run: |
        echo "📊 质量检查结果汇总:"
        echo "   - 基础检查: ${{ needs.basic-check.result }}"
        echo "   - 功能测试: ${{ needs.functional-test.result }}"
        echo "   - 安全扫描: ${{ needs.security.result }}"
        echo ""

        if [ "${{ needs.basic-check.result }}" == "success" ] && \
           [ "${{ needs.functional-test.result }}" == "success" ] && \
           [ "${{ needs.security.result }}" == "success" ]; then
          echo "✅ 所有质量检查通过！"
          echo "🚀 项目已准备好部署"
        else
          echo "❌ 质量检查未完全通过"
          echo "⚠️ 请修复失败的检查项后再部署"
        fi
